"""
Splits a FASTA file of DNA into pieces for array orders

***REQUIRED***

- Run with contig and step size as 48
- TAG at head of dna is format $ _ _ # _ _ _
  meaning 7 characters, so 56 DNA bases
- To ensure mod 8, pad the ends of the DNA with 2 bases (106 --> 104, padded with AA at the end)
- 104-56 = 48 for the chunk size
- stuffer sequence is TGAC, corresponding to single quote '

Steps to replicate:
$ python binarraychunker.py infile.txt outfile.txt 48 48 ACGACTGT
$ python
>>> import os
>>> infile = open("outfile.txt","r")
>>> newfile = open("new.txt","w")
>>> for line in infile:
...     newfile.write("%s\n" % line[22:126])    # to account for correct reading frame since adaptor is 22 bp
...		newfile.flush() 						# for huge files, may stop writing, so we need to flush I/O
...		os.fsync(newfile.fileno())
>>> infile.close()
>>> newfile.close()
$ ls
$ python
>>> from binaryDNA import *
>>> o = DNAToBinaryText()
>>> o.translate("new.txt","trans.txt")


"""
